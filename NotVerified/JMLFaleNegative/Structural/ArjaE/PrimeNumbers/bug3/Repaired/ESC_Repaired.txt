

PrimeNumbers.java:53: warning: The prover cannot establish an assertion (ArithmeticOperationRange) in method primeList:  underflow in int difference
                primeArray[count - 1] = num;
                                 ^


PrimeNumbers.java:28: warning: The prover cannot establish an assertion (LoopInvariant) in method primeList
            @ maintaining 2 <= count && count <= n + 1 && 3 <= num;
              ^


PrimeNumbers.java:53: warning: The prover cannot establish an assertion (PossiblyTooLargeIndex) in method primeList
                primeArray[count - 1] = num;
                          ^


PrimeNumbers.java:29: warning: The prover cannot establish an assertion (LoopInvariant) in method primeList
	    @ maintaining count_counter == count;
	      ^


PrimeNumbers.java:53: warning: The prover cannot establish an assertion (PossiblyNegativeIndex) in method primeList
                primeArray[count - 1] = num;
                          ^


PrimeNumbers.java:27: warning: The prover cannot establish an assertion (LoopInvariant) in method primeList
	    @ maintaining (\forall int i; 0 <= i && i < count-1; primeArray[i] < num);
	      ^


PrimeNumbers.java:26: warning: The prover cannot establish an assertion (LoopInvariant) in method primeList
	    @ maintaining (\forall int i; 0 <= i && i < count-1; \forall int k; 0 <= k && k < count-1 && i != k;  primeArray[i] != primeArray[k]);
	      ^


PrimeNumbers.java:25: warning: The prover cannot establish an assertion (LoopInvariant) in method primeList
	    @ maintaining (\forall int i; 0 <= i && i < count-1; (\forall int k;  2 <= k && k <= primeArray[i]/2; !div(primeArray[i],k)));
	      ^
8 warnings
